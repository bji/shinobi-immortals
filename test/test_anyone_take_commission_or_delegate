METADATA=`(dd if=/dev/zero bs=1 count=76 status=none; echo 0x10270000 | xxd -r | tr -d '\n'; dd if=/dev/zero bs=1 count=2616 status=none) | base64 | tr -d '\n'`
# Metadata to set into entries, only needs to include up to the ki_factor
METADATA_HEAD=`(dd if=/dev/zero bs=1 count=76 status=none; echo 0x10270000 | xxd -r | tr -d '\n') | base64 | tr -d '\n'`
SALT0=0
SALT1=1
SALT2=2
SHA2560=`compute_metadata_sha256 $METADATA $SALT0`
SHA2561=`compute_metadata_sha256 $METADATA $SALT1`
SHA2562=`compute_metadata_sha256 $METADATA $SALT2`


# This must be set so that user_stake_tx.sh will use the correct vote account
export SHINOBI_SYSTEMS_VOTE_PUBKEY=$VOTE_PUBKEY


# Create accounts and block
if [ -z "$TESTS" ]; then
    # Create stake accounts: delegated_stake, undelegated_stake
    make_stake_account $LEDGER/rich_user1.json $LEDGER/delegated5_stake.json 1000
    make_stake_account $LEDGER/rich_user2.json $LEDGER/delegated5_stake2.json 1000
    make_stake_account $LEDGER/rich_user1.json $LEDGER/undelegated5_stake.json 1000
    
    # Delegate the delegated stake accounts
    echo "Delegating $LEDGER/delegated5_stake.json"
    solana -u l delegate-stake -k $LEDGER/rich_user1.json $LEDGER/delegated5_stake.json $VOTE_PUBKEY                  \
           >/dev/null 2>/dev/null
    echo "Delegating $LEDGER/delegated5_stake2.json"
    solana -u l delegate-stake -k $LEDGER/rich_user2.json $LEDGER/delegated5_stake2.json $VOTE_PUBKEY                 \
           >/dev/null 2>/dev/null
    # Wait until end of epoch to ensure that these have delegated
    sleep_until_next_epoch

    # 17 0
    assert anyone_take_commission_or_delegate_setup_17_0_a                                                            \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/admin_create_block_tx.sh                                \
         $ADMIN_PUBKEY 17 0 6553 3 0 $((24*60*60)) \`lamports_from_sol 1000\` 1                                       \
         \`lamports_from_sol 1\` false $((24*60*60)) \`lamports_from_sol 1000\` 0                                     \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
    assert anyone_take_commission_or_delegate_setup_17_0_b                                                            \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/admin_add_entries_to_block_tx.sh                        \
         $ADMIN_PUBKEY 17 0 "http://foo.bar.com" none 0 $SHA2560 $SHA2561                                             \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
    assert anyone_take_commission_or_delegate_setup_17_0_c                                                            \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/admin_add_entries_to_block_tx.sh                        \
         $ADMIN_PUBKEY 17 0 "http://foo.bar.com" none 2 $SHA2562                                                      \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
    # set metadata
    assert anyone_take_commission_or_delegate_setup_17_0_d                                                            \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/admin_set_metadata_bytes_tx.sh                          \
         $ADMIN_PUBKEY 17 0 0 0 $METADATA_HEAD                                                                        \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
    assert anyone_take_commission_or_delegate_setup_17_0_e                                                            \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/admin_set_metadata_bytes_tx.sh                          \
         $ADMIN_PUBKEY 17 0 1 0 $METADATA_HEAD                                                                        \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
    assert anyone_take_commission_or_delegate_setup_17_0_f                                                            \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/admin_set_metadata_bytes_tx.sh                          \
         $ADMIN_PUBKEY 17 0 2 0 $METADATA_HEAD                                                                        \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
    # reveal entries
    assert anyone_take_commission_or_delegate_setup_17_0_g                                                            \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/admin_reveal_entries_tx.sh                              \
         $ADMIN_PUBKEY 17 0 0 $SALT0 $SALT1 $SALT2                                                                    \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
    # rich_user1 buy entry 0
    assert anyone_take_commission_or_delegate_setup_17_0_h                                                            \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/user_buy_tx.sh                                          \
         $ADMIN_PUBKEY $RICH_USER1_PUBKEY 17 0 0 \`lamports_from_sol 1001\`                                           \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user1.json                                                                        \
        | solxact submit l 2>&1`
    # rich_user1 stake entry 0
    assert anyone_take_commission_or_delegate_setup_17_0_i                                                            \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/user_stake_tx.sh                                        \
         $RICH_USER1_PUBKEY 17 0 0 $LEDGER/delegated5_stake.json                                                      \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user1.json                                                                        \
        | solxact submit l 2>&1`
    # rich_user2 buy entry 1
    assert anyone_take_commission_or_delegate_setup_17_0_j                                                            \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/user_buy_tx.sh                                          \
         $ADMIN_PUBKEY $RICH_USER2_PUBKEY 17 0 1 \`lamports_from_sol 1001\`                                           \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user2.json                                                                        \
        | solxact submit l 2>&1`
    # rich_user2 stake entry 1
    assert anyone_take_commission_or_delegate_setup_17_0_k                                                            \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/user_stake_tx.sh                                        \
         $RICH_USER2_PUBKEY 17 0 1 $LEDGER/delegated5_stake2.json                                                     \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user2.json                                                                        \
        | solxact submit l 2>&1`
    # rich_user2 buy entry 2
    assert anyone_take_commission_or_delegate_setup_17_0_l                                                            \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/user_buy_tx.sh                                          \
         $ADMIN_PUBKEY $RICH_USER1_PUBKEY 17 0 2 \`lamports_from_sol 1001\`                                           \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user1.json                                                                        \
        | solxact submit l 2>&1`

    # 17 0 0 is owned and staked by rich_user1
    # 17 0 1 is owned and staked by rich_user2
    # 17 0 2 is owned by rich_user1

    # 17 1
    assert anyone_take_commission_or_delegate_setup_17_1                                                              \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/admin_create_block_tx.sh                                \
         $ADMIN_PUBKEY 17 1 6553 3 0 $((24*60*60)) \`lamports_from_sol 1000\` 1                                       \
         \`lamports_from_sol 1\` false $((24*60*60)) \`lamports_from_sol 1000\` 0                                     \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`

    # 17 1 is an incomplete block

    # Sleep for an epoch to ensure that delegations all take effect
    sleep_until_next_epoch
fi


export      DELEGATED_STAKE_PUBKEY=`solxact pubkey $LEDGER/delegated5_stake.json`
export    UNDELEGATED_STAKE_PUBKEY=`solxact pubkey $LEDGER/undelegated5_stake.json`


# Bad block
if should_run_test anyone_take_commission_or_delegate_bad_block; then
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 14 u32 17 u32 0 ]`
    MINT_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 5 pubkey $BLOCK_PUBKEY u16 0 ]`
    ENTRY_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 15 pubkey $MINT_PUBKEY ]`
    BRIDGE_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 10 pubkey $MINT_PUBKEY ]`
    assert_fail anyone_take_commission_or_delegate_bad_block                                                          \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1101}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x44d"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x44d"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                     \
    `echo "encoding c                                                                                                 \
           fee_payer $RICH_USER1_PUBKEY                                                                               \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $RICH_USER1_PUBKEY ws                                                                              \
           account $CONFIG_PUBKEY                                                                                     \
           account $ENTRY_PUBKEY w                                                                                    \
           account $DELEGATED_STAKE_PUBKEY w                                                                          \
           account $MASTER_STAKE_PUBKEY w                                                                             \
           account $BRIDGE_PUBKEY w                                                                                   \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $CLOCK_SYSVAR_PUBKEY                                                                               \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $STAKE_PROGRAM_PUBKEY                                                                              \
           account $STAKE_HISTORY_SYSVAR_PUBKEY                                                                       \
           // Instruction code 19 = TakeCommissionOrDelegate //                                                       \
           u8 19                                                                                                      \
           u64 0"                                                                                                     \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user1.json                                                                        \
        | solxact submit l 2>&1`
fi


# Incomplete block
if should_run_test anyone_take_commission_or_delegate_incomplete_block; then
    assert_fail anyone_take_commission_or_delegate_incomplete_block                                                   \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1007}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x3ef"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x3ef"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                        \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/anyone_take_commission_or_delegate_tx.sh                \
         $RICH_USER1_PUBKEY 17 1 0 $DELEGATED_STAKE_PUBKEY                                                            \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user1.json                                                                        \
        | solxact submit l 2>&1`
fi


# Bad entry
if should_run_test anyone_take_commission_or_delegate_bad_entry; then
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 14 u32 17 u32 0 ]`
    MINT_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 5 pubkey $BLOCK_PUBKEY u16 0 ]`
    ENTRY_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 15 pubkey $MINT_PUBKEY ]`
    BRIDGE_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 10 pubkey $MINT_PUBKEY ]`
    assert_fail anyone_take_commission_or_delegate_bad_entry                                                          \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1102}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x44e"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x44e"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                        \
    `echo "encoding c                                                                                                 \
           fee_payer $RICH_USER1_PUBKEY                                                                               \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $RICH_USER1_PUBKEY ws                                                                              \
           account $BLOCK_PUBKEY                                                                                      \
           account $CONFIG_PUBKEY w                                                                                   \
           account $DELEGATED_STAKE_PUBKEY w                                                                          \
           account $MASTER_STAKE_PUBKEY w                                                                             \
           account $BRIDGE_PUBKEY w                                                                                   \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $CLOCK_SYSVAR_PUBKEY                                                                               \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $STAKE_PROGRAM_PUBKEY                                                                              \
           account $STAKE_HISTORY_SYSVAR_PUBKEY                                                                       \
           // Instruction code 19 = TakeCommissionOrDelegate //                                                       \
           u8 19                                                                                                      \
           u64 0"                                                                                                     \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user1.json                                                                        \
        | solxact submit l 2>&1`
fi


# Entry not of block
if should_run_test anyone_take_commission_or_delegate_entry_not_in_block; then
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 14 u32 17 u32 0 ]`
    MINT_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 5 pubkey $BLOCK_PUBKEY u16 0 ]`
    ENTRY_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 15 pubkey $MINT_PUBKEY ]`
    BRIDGE_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 10 pubkey $MINT_PUBKEY ]`
    BAD_BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 14 u32 17 u32 1 ]`
    BAD_MINT_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 5 pubkey $BAD_BLOCK_PUBKEY u16 0 ]`
    BAD_ENTRY_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 15 pubkey $BAD_MINT_PUBKEY ]`
    assert_fail anyone_take_commission_or_delegate_entry_not_in_block                                                 \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1102}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x44e"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x44e"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                        \
    `echo "encoding c                                                                                                 \
           fee_payer $RICH_USER1_PUBKEY                                                                               \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $RICH_USER1_PUBKEY ws                                                                              \
           account $BLOCK_PUBKEY                                                                                      \
           account $BAD_ENTRY_PUBKEY w                                                                                \
           account $DELEGATED_STAKE_PUBKEY w                                                                          \
           account $MASTER_STAKE_PUBKEY w                                                                             \
           account $BRIDGE_PUBKEY w                                                                                   \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $CLOCK_SYSVAR_PUBKEY                                                                               \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $STAKE_PROGRAM_PUBKEY                                                                              \
           account $STAKE_HISTORY_SYSVAR_PUBKEY                                                                       \
           // Instruction code 19 = TakeCommissionOrDelegate //                                                       \
           u8 19                                                                                                      \
           u64 0"                                                                                                     \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user1.json                                                                        \
        | solxact submit l 2>&1`
fi


# Entry not in owned + staked state
if should_run_test anyone_take_commission_or_delegate_entry_not_staked; then
    assert_fail anyone_take_commission_or_delegate_entry_not_staked                                                   \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1039}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x40f"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x40f"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                        \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/anyone_take_commission_or_delegate_tx.sh                \
         $RICH_USER1_PUBKEY 17 0 2 $DELEGATED_STAKE_PUBKEY                                                            \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user1.json                                                                        \
        | solxact submit l 2>&1`
fi


# Stake account not staked to entry
if should_run_test anyone_take_commission_or_delegate_bad_stake; then
    assert_fail anyone_take_commission_or_delegate_entry_bad_stake                                                    \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1103}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x44f"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x44f"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                        \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/anyone_take_commission_or_delegate_tx.sh                \
         $RICH_USER1_PUBKEY 17 0 0 $UNDELEGATED_STAKE_PUBKEY                                                          \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user1.json                                                                        \
        | solxact submit l 2>&1`
fi


# Not master stake account
if should_run_test anyone_take_commission_or_delegate_bad_master_stake; then
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 14 u32 17 u32 0 ]`
    MINT_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 5 pubkey $BLOCK_PUBKEY u16 0 ]`
    ENTRY_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 15 pubkey $MINT_PUBKEY ]`
    BRIDGE_PUBKEY=`pda $SELF_PROGRAM_PUBKEY [ u8 10 pubkey $MINT_PUBKEY ]`
    assert_fail anyone_take_commission_or_delegate_bad_master_stake                                                   \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1104}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x450"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x450"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                        \
    `echo "encoding c                                                                                                 \
           fee_payer $RICH_USER1_PUBKEY                                                                               \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $RICH_USER1_PUBKEY ws                                                                              \
           account $BLOCK_PUBKEY                                                                                      \
           account $ENTRY_PUBKEY w                                                                                    \
           account $DELEGATED_STAKE_PUBKEY w                                                                          \
           account $DELEGATED_STAKE_PUBKEY w                                                                          \
           account $BRIDGE_PUBKEY w                                                                                   \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $CLOCK_SYSVAR_PUBKEY                                                                               \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $STAKE_PROGRAM_PUBKEY                                                                              \
           account $STAKE_HISTORY_SYSVAR_PUBKEY                                                                       \
           // Instruction code 19 = TakeCommissionOrDelegate //                                                       \
           u8 19                                                                                                      \
           u64 0"                                                                                                     \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user1.json                                                                        \
        | solxact submit l 2>&1`
fi


# Stake account delegated -- should take commission
if should_run_test anyone_take_commission_or_delegate_success_take_commission; then
    # Wait until end of epoch to ensure that there is commission to take
    sleep_until_next_epoch
    # Save the amount delegated in master
    MASTER_STAKE=`solana -u l stake-account $MASTER_STAKE_PUBKEY | grep "^Active Stake:" | cut -d ' ' -f 3`
    assert anyone_take_commission_or_delegate_entry_success_take_commission                                           \
    `SELF_PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/anyone_take_commission_or_delegate_tx.sh                \
         $RICH_USER1_PUBKEY 17 0 0 $DELEGATED_STAKE_PUBKEY                                                            \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user1.json                                                                        \
        | solxact submit l 2>&1`
    # Check to make sure that commission was charged
    NEW_MASTER_STAKE=`solana -u l stake-account $MASTER_STAKE_PUBKEY | grep "^Active Stake:" | cut -d ' ' -f 3`
    if ! less_than $MASTER_STAKE $NEW_MASTER_STAKE; then
        echo "FAIL: anyone_take_commission_or_delegate_entry_success_take_commission: master stake didn't increase"
        exit 1
    fi
fi
