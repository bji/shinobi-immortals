

# Make sure that the admin has signed the tx
if should_run_test admin_add_entries_to_block_no_auth; then
    # Test with block 1 0
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[0]`
    assert_fail admin_add_entries_to_block_no_auth                                                                    \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1004}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x3ec"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x3ec"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                     \
    `echo "encoding c                                                                                                 \
           fee_payer $RICH_USER1_PUBKEY                                                                               \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $RICH_USER1_PUBKEY s                                                                               \
           account $RICH_USER1_PUBKEY ws                                                                              \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 0                                                                                                      \
           sha256 \`sha256_of hi\`"                                                                                   \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user1.json                                                                        \
        | solxact submit l 2>&1`
fi


# Create the block needed for this test
if [ -z "$TESTS" ]; then
    # Test with block 1 0
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[0]`
    assert admin_add_entries_to_block_setup                                                                           \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           // Instruction code 2 = CreateBlock //                                                                     \
           u8 2                                                                                                       \
           // Commission //                                                                                           \
           u16 0                                                                                                      \
           // Block Configuration //                                                                                  \
           struct [                                                                                                   \
           // Group Number //                                                                                         \
           u32 1                                                                                                      \
           // Block Number //                                                                                         \
           u32 0                                                                                                      \
           // Total Entry Count //                                                                                    \
           u16 10                                                                                                     \
           // Total Mystery Count //                                                                                  \
           u16 5                                                                                                      \
           // Mystery Phase Duration //                                                                               \
           u32 $((24*60*60))                                                                                          \
           // Mystery Start Price Lamports //                                                                         \
           u64 \`lamports_from_sol 1000\`                                                                             \
           // Reveal Period Duration //                                                                               \
           u32 $((24*60*60))                                                                                          \
           // Minimum Price Lamports //                                                                               \
           u64 \`lamports_from_sol 1\`                                                                                \
           // Has Auction //                                                                                          \
           bool false                                                                                                 \
           // Duration (bad, must be nonzero) //                                                                      \
           u32 $((24*60*60))                                                                                          \
           // Final Start Price Lamports  //                                                                          \
           u64 \`lamports_from_sol 1000\`                                                                             \
           // Whitelist Duration //                                                                                   \
           u32 0                                                                                                      \
           ]"                                                                                                         \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
fi


# Bad account numbers -- too few entries in block data
if should_run_test admin_add_entries_to_block_too_few_sha256; then
    # Test with block 1 0
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[0]`
    MINT_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[0]`
    ENTRY_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY0]`
    TOKEN_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY0]`
    METADATA_PUBKEY0=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY0]`
    MINT_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[1]`
    ENTRY_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY1]`
    TOKEN_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY1]`
    METADATA_PUBKEY1=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY1]`
    assert_fail admin_add_entries_to_block_too_few_sha256                                                             \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1001}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x3e9"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x3e9"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                     \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           // There are two sets of entry keys provided here //                                                       \
           account $ENTRY_PUBKEY0 w                                                                                   \
           account $MINT_PUBKEY0 w                                                                                    \
           account $TOKEN_PUBKEY0 w                                                                                   \
           account $METADATA_PUBKEY0 w                                                                                \
           account $ENTRY_PUBKEY1 w                                                                                   \
           account $MINT_PUBKEY1 w                                                                                    \
           account $TOKEN_PUBKEY1 w                                                                                   \
           account $METADATA_PUBKEY1 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 0                                                                                                      \
           // But there's only one entry SHA256 provided here //                                                      \
           sha256 \`sha256_of hi\`"                                                                                   \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
fi


# Bad account numbers -- too few entries in block data
if should_run_test admin_add_entries_to_block_too_many_sha256; then
    # Test with block 1 0
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[0]`
    MINT_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[0]`
    ENTRY_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY0]`
    TOKEN_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY0]`
    METADATA_PUBKEY0=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY0]`
    MINT_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[1]`
    ENTRY_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY1]`
    TOKEN_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY1]`
    METADATA_PUBKEY1=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY1]`
    assert_fail admin_add_entries_to_block_too_many_sha256                                                            \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1001}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x3e9"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x3e9"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                     \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           // There are two sets of entry keys provided here //                                                       \
           account $ENTRY_PUBKEY0 w                                                                                   \
           account $MINT_PUBKEY0 w                                                                                    \
           account $TOKEN_PUBKEY0 w                                                                                   \
           account $METADATA_PUBKEY0 w                                                                                \
           account $ENTRY_PUBKEY1 w                                                                                   \
           account $MINT_PUBKEY1 w                                                                                    \
           account $TOKEN_PUBKEY1 w                                                                                   \
           account $METADATA_PUBKEY1 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 0                                                                                                      \
           // But there are three entry SHA256 provided here //                                                       \
           sha256 \`sha256_of hi\`"                                                                                   \
           sha256 \`sha256_of there\`"                                                                                \
           sha256 \`sha256_of ok\`"                                                                                   \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
fi


# Bad block
if should_run_test admin_add_entries_to_block_bad_block; then
    # Test with block 1 1 which does not exist
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[1]`
    MINT_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[0]`
    ENTRY_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY0]`
    TOKEN_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY0]`
    METADATA_PUBKEY0=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY0]`
    MINT_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[1]`
    ENTRY_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY1]`
    TOKEN_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY1]`
    METADATA_PUBKEY1=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY1]`
    assert_fail admin_add_entries_to_block_bad_block                                                                  \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1103}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x44f"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x44f"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                     \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           account $ENTRY_PUBKEY0 w                                                                                   \
           account $MINT_PUBKEY0 w                                                                                    \
           account $TOKEN_PUBKEY0 w                                                                                   \
           account $METADATA_PUBKEY0 w                                                                                \
           account $ENTRY_PUBKEY1 w                                                                                   \
           account $MINT_PUBKEY1 w                                                                                    \
           account $TOKEN_PUBKEY1 w                                                                                   \
           account $METADATA_PUBKEY1 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 0                                                                                                      \
           sha256 \`sha256_of hi\`                                                                                    \
           sha256 \`sha256_of there\`"                                                                                \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
fi


# Bad entry account
if should_run_test admin_add_entries_to_block_bad_entry_account; then
    # Test with block 1 0
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[0]`
    MINT_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[0]`
    # Bad entry account, based on invalid PDA
    ENTRY_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[100] Pubkey[$MINT_PUBKEY0]`
    TOKEN_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY0]`
    METADATA_PUBKEY0=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY0]`
    MINT_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[1]`
    ENTRY_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY1]`
    TOKEN_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY1]`
    METADATA_PUBKEY1=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY1]`
    assert_fail admin_add_entries_to_block_bad_entry_account                                                          \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1005}]},"logs":["Program REDACTED invoke [1]","Program REDACTED invoke [2]","Program REDACTED success","Program REDACTED invoke [2]","Program REDACTED Instruction: InitializeMint2","Program REDACTED consumed REDACTED compute units","Program REDACTED success","Program REDACTED invoke [2]","Program REDACTED success","Program REDACTED invoke [2]","Program REDACTED Instruction: InitializeAccount3","Program REDACTED consumed REDACTED compute units","Program REDACTED success","Program REDACTED invoke [2]","Program REDACTED Instruction: MintTo","Program REDACTED consumed REDACTED compute units","Program REDACTED success","Program REDACTED invoke [2]","Program REDACTED Instruction: Create Metadata Accounts v2","Program REDACTED Transfer 5616720 lamports to the new account","Program REDACTED invoke [3]","Program REDACTED success","Program REDACTED Allocate space for the account","Program REDACTED invoke [3]","Program REDACTED success","Program REDACTED Assign the account to the owning program","Program REDACTED invoke [3]","Program REDACTED success","Program REDACTED consumed REDACTED compute units","Program REDACTED success","Program REDACTED invoke [2]","Program REDACTED Instruction: Sign Metadata","Program REDACTED consumed REDACTED compute units","Program REDACTED success","Program REDACTED invoke [2]","Program REDACTED Instruction: SetAuthority","Program REDACTED consumed REDACTED compute units","Program REDACTED success","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x3ed"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x3ed"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                                                                 \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           // There are two sets of entry keys provided here //                                                       \
           account $ENTRY_PUBKEY0 w                                                                                   \
           account $MINT_PUBKEY0 w                                                                                    \
           account $TOKEN_PUBKEY0 w                                                                                   \
           account $METADATA_PUBKEY0 w                                                                                \
           account $ENTRY_PUBKEY1 w                                                                                   \
           account $MINT_PUBKEY1 w                                                                                    \
           account $TOKEN_PUBKEY1 w                                                                                   \
           account $METADATA_PUBKEY1 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 0                                                                                                      \
           // But there are three entry SHA256 provided here //                                                       \
           sha256 \`sha256_of hi\`                                                                                    \
           sha256 \`sha256_of there\`"                                                                                \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
fi


# Bad entry mint account
if should_run_test admin_add_entries_to_block_bad_entry_mint_account; then
    # Test with block 1 0
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[0]`
    # Bad mint account, based on invalid PDA
    MINT_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[100] Pubkey[$BLOCK_PUBKEY] u16[0]`
    ENTRY_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY0]`
    TOKEN_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY0]`
    METADATA_PUBKEY0=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY0]`
    MINT_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[1]`
    ENTRY_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY1]`
    TOKEN_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY1]`
    METADATA_PUBKEY1=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY1]`
    assert_fail admin_add_entries_to_block_bad_entry_mint_account                                                     \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1005}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x3ed"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x3ed"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                     \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           // There are two sets of entry keys provided here //                                                       \
           account $ENTRY_PUBKEY0 w                                                                                   \
           account $MINT_PUBKEY0 w                                                                                    \
           account $TOKEN_PUBKEY0 w                                                                                   \
           account $METADATA_PUBKEY0 w                                                                                \
           account $ENTRY_PUBKEY1 w                                                                                   \
           account $MINT_PUBKEY1 w                                                                                    \
           account $TOKEN_PUBKEY1 w                                                                                   \
           account $METADATA_PUBKEY1 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 0                                                                                                      \
           // But there are three entry SHA256 provided here //                                                       \
           sha256 \`sha256_of hi\`                                                                                    \
           sha256 \`sha256_of there\`"                                                                                \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
fi

# Bad entry token account
if should_run_test admin_add_entries_to_block_bad_entry_token_account; then
    # Test with block 1 0
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[0]`
    MINT_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[0]`
    ENTRY_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY0]`
    # Bad entry token account, based on invalid PDA
    TOKEN_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[100] Pubkey[$MINT_PUBKEY0]`
    METADATA_PUBKEY0=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY0]`
    MINT_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[1]`
    ENTRY_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY1]`
    TOKEN_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY1]`
    METADATA_PUBKEY1=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY1]`
    assert_fail admin_add_entries_to_block_bad_entry_token_account                                                    \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1005}]},"logs":["Program REDACTED invoke [1]","Program REDACTED invoke [2]","Program REDACTED success","Program REDACTED invoke [2]","Program REDACTED Instruction: InitializeMint2","Program REDACTED consumed REDACTED compute units","Program REDACTED success","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x3ed"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x3ed"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                     \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           // There are two sets of entry keys provided here //                                                       \
           account $ENTRY_PUBKEY0 w                                                                                   \
           account $MINT_PUBKEY0 w                                                                                    \
           account $TOKEN_PUBKEY0 w                                                                                   \
           account $METADATA_PUBKEY0 w                                                                                \
           account $ENTRY_PUBKEY1 w                                                                                   \
           account $MINT_PUBKEY1 w                                                                                    \
           account $TOKEN_PUBKEY1 w                                                                                   \
           account $METADATA_PUBKEY1 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 0                                                                                                      \
           // But there are three entry SHA256 provided here //                                                       \
           sha256 \`sha256_of hi\`                                                                                    \
           sha256 \`sha256_of there\`"                                                                                \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
fi


# Bad entry metaplex metadata account
if should_run_test admin_add_entries_to_block_bad_entry_metaplex_account; then
    # Test with block 1 0
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[0]`
    MINT_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[0]`
    ENTRY_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY0]`
    TOKEN_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY0]`
    # Bad metaplex metadata account, based on invalid mint
    METADATA_PUBKEY0=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$BLOCK_PUBKEY]`
    MINT_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[1]`
    ENTRY_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY1]`
    TOKEN_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY1]`
    METADATA_PUBKEY1=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY1]`
    assert_fail admin_add_entries_to_block_bad_entry_metaplex_account                                                 \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":5}]},"logs":["Program REDACTED invoke [1]","Program REDACTED invoke [2]","Program REDACTED success","Program REDACTED invoke [2]","Program REDACTED Instruction: InitializeMint2","Program REDACTED consumed REDACTED compute units","Program REDACTED success","Program REDACTED invoke [2]","Program REDACTED success","Program REDACTED invoke [2]","Program REDACTED Instruction: InitializeAccount3","Program REDACTED consumed REDACTED compute units","Program REDACTED success","Program REDACTED invoke [2]","Program REDACTED Instruction: MintTo","Program REDACTED consumed REDACTED compute units","Program REDACTED success","Program REDACTED invoke [2]","Program REDACTED Instruction: Create Metadata Accounts v2","Program REDACTED Metadatas key must match seed of [metadata, program id, mint] provided","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x5","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x5"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x5"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                        \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           // There are two sets of entry keys provided here //                                                       \
           account $ENTRY_PUBKEY0 w                                                                                   \
           account $MINT_PUBKEY0 w                                                                                    \
           account $TOKEN_PUBKEY0 w                                                                                   \
           account $METADATA_PUBKEY0 w                                                                                \
           account $ENTRY_PUBKEY1 w                                                                                   \
           account $MINT_PUBKEY1 w                                                                                    \
           account $TOKEN_PUBKEY1 w                                                                                   \
           account $METADATA_PUBKEY1 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 0                                                                                                      \
           // But there are three entry SHA256 provided here //                                                       \
           sha256 \`sha256_of hi\`                                                                                    \
           sha256 \`sha256_of there\`"                                                                                \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
fi


# Add entries 0 - 8 successfully, must do this
if [ -z "$TESTS" ]; then
    # Test with block 1 0
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[0]`
    MINT_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[0]`
    ENTRY_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY0]`
    TOKEN_PUBKEY0=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY0]`
    METADATA_PUBKEY0=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY0]`
    MINT_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[1]`
    ENTRY_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY1]`
    TOKEN_PUBKEY1=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY1]`
    METADATA_PUBKEY1=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY1]`
    assert admin_add_entries_to_block_success1                                                                        \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           account $ENTRY_PUBKEY0 w                                                                                   \
           account $MINT_PUBKEY0 w                                                                                    \
           account $TOKEN_PUBKEY0 w                                                                                   \
           account $METADATA_PUBKEY0 w                                                                                \
           account $ENTRY_PUBKEY1 w                                                                                   \
           account $MINT_PUBKEY1 w                                                                                    \
           account $TOKEN_PUBKEY1 w                                                                                   \
           account $METADATA_PUBKEY1 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 0                                                                                                      \
           // But there are three entry SHA256 provided here //                                                       \
           sha256 \`sha256_of 0\`                                                                                     \
           sha256 \`sha256_of 1\`"                                                                                    \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
    MINT_PUBKEY2=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[2]`
    ENTRY_PUBKEY2=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY2]`
    TOKEN_PUBKEY2=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY2]`
    METADATA_PUBKEY2=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY2]`
    MINT_PUBKEY3=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[3]`
    ENTRY_PUBKEY3=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY3]`
    TOKEN_PUBKEY3=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY3]`
    METADATA_PUBKEY3=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY3]`
    assert admin_add_entries_to_block_success2                                                                        \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           account $ENTRY_PUBKEY2 w                                                                                   \
           account $MINT_PUBKEY2 w                                                                                    \
           account $TOKEN_PUBKEY2 w                                                                                   \
           account $METADATA_PUBKEY2 w                                                                                \
           account $ENTRY_PUBKEY3 w                                                                                   \
           account $MINT_PUBKEY3 w                                                                                    \
           account $TOKEN_PUBKEY3 w                                                                                   \
           account $METADATA_PUBKEY3 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 2                                                                                                      \
           // But there are three entry SHA256 provided here //                                                       \
           sha256 \`sha256_of 2\`                                                                                     \
           sha256 \`sha256_of 3\`"                                                                                    \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
    MINT_PUBKEY4=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[4]`
    ENTRY_PUBKEY4=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY4]`
    TOKEN_PUBKEY4=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY4]`
    METADATA_PUBKEY4=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY4]`
    MINT_PUBKEY5=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[5]`
    ENTRY_PUBKEY5=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY5]`
    TOKEN_PUBKEY5=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY5]`
    METADATA_PUBKEY5=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY5]`
    assert admin_add_entries_to_block_success3                                                                        \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           account $ENTRY_PUBKEY4 w                                                                                   \
           account $MINT_PUBKEY4 w                                                                                    \
           account $TOKEN_PUBKEY4 w                                                                                   \
           account $METADATA_PUBKEY4 w                                                                                \
           account $ENTRY_PUBKEY5 w                                                                                   \
           account $MINT_PUBKEY5 w                                                                                    \
           account $TOKEN_PUBKEY5 w                                                                                   \
           account $METADATA_PUBKEY5 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 4                                                                                                      \
           // But there are three entry SHA256 provided here //                                                       \
           sha256 \`sha256_of 4\`                                                                                     \
           sha256 \`sha256_of 5\`"                                                                                    \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
    MINT_PUBKEY6=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[6]`
    ENTRY_PUBKEY6=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY6]`
    TOKEN_PUBKEY6=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY6]`
    METADATA_PUBKEY6=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY6]`
    MINT_PUBKEY7=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[7]`
    ENTRY_PUBKEY7=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY7]`
    TOKEN_PUBKEY7=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY7]`
    METADATA_PUBKEY7=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY7]`
    assert admin_add_entries_to_block_success4                                                                        \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           account $ENTRY_PUBKEY6 w                                                                                   \
           account $MINT_PUBKEY6 w                                                                                    \
           account $TOKEN_PUBKEY6 w                                                                                   \
           account $METADATA_PUBKEY6 w                                                                                \
           account $ENTRY_PUBKEY7 w                                                                                   \
           account $MINT_PUBKEY7 w                                                                                    \
           account $TOKEN_PUBKEY7 w                                                                                   \
           account $METADATA_PUBKEY7 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 6                                                                                                      \
           // But there are three entry SHA256 provided here //                                                       \
           sha256 \`sha256_of 6\`                                                                                     \
           sha256 \`sha256_of 7\`"                                                                                    \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
    MINT_PUBKEY8=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[8]`
    ENTRY_PUBKEY8=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY8]`
    TOKEN_PUBKEY8=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY8]`
    METADATA_PUBKEY8=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY8]`
    assert admin_add_entries_to_block_success5                                                                        \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           account $ENTRY_PUBKEY8 w                                                                                   \
           account $MINT_PUBKEY8 w                                                                                    \
           account $TOKEN_PUBKEY8 w                                                                                   \
           account $METADATA_PUBKEY8 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 8                                                                                                      \
           // But there are three entry SHA256 provided here //                                                       \
           sha256 \`sha256_of 8\`"                                                                                    \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
fi


# Add too many entries
if should_run_test admin_add_entries_to_block_too_many_entries; then
    # Test with block 1 0
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[0]`
    MINT_PUBKEY9=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[9]`
    ENTRY_PUBKEY9=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY9]`
    TOKEN_PUBKEY9=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY9]`
    METADATA_PUBKEY9=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY9]`
    MINT_PUBKEYa=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[10]`
    ENTRY_PUBKEYa=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEYa]`
    TOKEN_PUBKEYa=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEYa]`
    METADATA_PUBKEYa=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEYa]`
    assert_fail admin_add_entries_to_block_too_many_entries                                                           \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1302}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x516"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x516"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                     \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           account $ENTRY_PUBKEY9 w                                                                                   \
           account $MINT_PUBKEY9 w                                                                                    \
           account $TOKEN_PUBKEY9 w                                                                                   \
           account $METADATA_PUBKEY9 w                                                                                \
           account $ENTRY_PUBKEYa w                                                                                   \
           account $MINT_PUBKEYa w                                                                                    \
           account $TOKEN_PUBKEYa w                                                                                   \
           account $METADATA_PUBKEYa w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 9                                                                                                      \
           // But there are three entry SHA256 provided here //                                                       \
           sha256 \`sha256_of 9\`                                                                                     \
           sha256 \`sha256_of a\`"                                                                                    \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
fi



# Success, and verify
if [ -z "$TESTS" ]; then
    # Test with block 1 0
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[0]`
    MINT_PUBKEY9=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[9]`
    ENTRY_PUBKEY9=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY9]`
    TOKEN_PUBKEY9=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY9]`
    METADATA_PUBKEY9=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY9]`
    assert admin_add_entries_to_block_success6                                                                        \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           account $ENTRY_PUBKEY9 w                                                                                   \
           account $MINT_PUBKEY9 w                                                                                    \
           account $TOKEN_PUBKEY9 w                                                                                   \
           account $METADATA_PUBKEY9 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 9                                                                                                      \
           // But there are three entry SHA256 provided here //                                                       \
           sha256 \`sha256_of 9\`"                                                                                    \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`

    # Block completed, check that block is complete
    BLOCK_DATA=`PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/show.sh -u l block 1 0`
    if [ `echo "$BLOCK_DATA" | jq .added_entries_count` -ne 10 ]; then
        echo "FAIL: admin_add_entries_to_block: Bad added entries count"
    fi
    if [ `echo "$BLOCK_DATA" | jq .block_start_timestamp` -eq 0 ]; then
        echo "FAIL: admin_add_entries_to_block: Bad block start timestamp"
    fi
    
    # And check that entries are all correct
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[0]`
    for i in `seq 0 9`; do
        MINT_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[$i]`
        ENTRY_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY]`
        TOKEN_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY]`
        METADATA_PUBKEY=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]               \
                                                                       Pubkey[$MINT_PUBKEY]`
        SHA256=`sha256_of $i`
        EXPECTED_ENTRY_JSON=`cat <<EOF
{
  "entry_pubkey": "$ENTRY_PUBKEY",
  "block_pubkey": "$BLOCK_PUBKEY",
  "group_number": 1,
  "block_number": 0,
  "entry_index": $i,
  "mint_pubkey": "$MINT_PUBKEY",
  "token_pubkey": "$TOKEN_PUBKEY",
  "metaplex_metadata_pubkey": "$METADATA_PUBKEY",
  "minimum_price": 1,
  "has_auction": false,
  "duration": 86400,
  "non_auction_start_price": 1000,
  "reveal_sha256": "$SHA256",
  "reveal_timestamp": 0,
  "purchase_price": 0,
  "refund_awarded": false,
  "commission": 0,
  "auction": {
    "highest_bid": 0
  },
  "owned": {
    "stake_initial": 0,
    "stake_epoch": 0,
    "last_harvest_ki_stake": 0,
    "last_commission_charge_stake": 0
  },
  "level": 0,
  "metadata": {
    "level_1_ki": 0,
    "random": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "level_metadata": [
      {
        "form": 0,
        "skill": 0,
        "ki_factor": 0,
        "name": "",
        "uri": "",
        "uri_contents_sha256": "0000000000000000000000000000000000000000000000000000000000000000"
      },
      {
        "form": 0,
        "skill": 0,
        "ki_factor": 0,
        "name": "",
        "uri": "",
        "uri_contents_sha256": "0000000000000000000000000000000000000000000000000000000000000000"
      },
      {
        "form": 0,
        "skill": 0,
        "ki_factor": 0,
        "name": "",
        "uri": "",
        "uri_contents_sha256": "0000000000000000000000000000000000000000000000000000000000000000"
      },
      {
        "form": 0,
        "skill": 0,
        "ki_factor": 0,
        "name": "",
        "uri": "",
        "uri_contents_sha256": "0000000000000000000000000000000000000000000000000000000000000000"
      },
      {
        "form": 0,
        "skill": 0,
        "ki_factor": 0,
        "name": "",
        "uri": "",
        "uri_contents_sha256": "0000000000000000000000000000000000000000000000000000000000000000"
      },
      {
        "form": 0,
        "skill": 0,
        "ki_factor": 0,
        "name": "",
        "uri": "",
        "uri_contents_sha256": "0000000000000000000000000000000000000000000000000000000000000000"
      },
      {
        "form": 0,
        "skill": 0,
        "ki_factor": 0,
        "name": "",
        "uri": "",
        "uri_contents_sha256": "0000000000000000000000000000000000000000000000000000000000000000"
      },
      {
        "form": 0,
        "skill": 0,
        "ki_factor": 0,
        "name": "",
        "uri": "",
        "uri_contents_sha256": "0000000000000000000000000000000000000000000000000000000000000000"
      },
      {
        "form": 0,
        "skill": 0,
        "ki_factor": 0,
        "name": "",
        "uri": "",
        "uri_contents_sha256": "0000000000000000000000000000000000000000000000000000000000000000"
      }
    ]
  }
}
EOF`

        ACTUAL_ENTRY_JSON=`PROGRAM_PUBKEY=$SELF_PROGRAM_PUBKEY $SOURCE/scripts/show.sh -u l entry 1 0 $i | jq .`
        
        if [ "$EXPECTED_ENTRY_JSON" != "$ACTUAL_ENTRY_JSON" ]; then
            echo "FAIL: admin_add_entries_to_block: Unexpected entry data:"
            diff <(echo "$EXPECTED_ENTRY_JSON") <(echo "$ACTUAL_ENTRY_JSON")
            exit 1
        fi
    done
fi


# Block already complete
if should_run_test admin_add_entries_to_block_already_complete; then
    # Test with block 1 0
    BLOCK_PUBKEY=`pda $SELF_PROGRAM_PUBKEY u8[14] u32[1] u32[0]`
    MINT_PUBKEY3=`pda $SELF_PROGRAM_PUBKEY u8[5] Pubkey[$BLOCK_PUBKEY] u16[3]`
    ENTRY_PUBKEY3=`pda $SELF_PROGRAM_PUBKEY u8[15] Pubkey[$MINT_PUBKEY3]`
    TOKEN_PUBKEY3=`pda $SELF_PROGRAM_PUBKEY u8[6] Pubkey[$MINT_PUBKEY3]`
    METADATA_PUBKEY3=`pda $METAPLEX_PROGRAM_PUBKEY String[metadata] Pubkey[$METAPLEX_PROGRAM_PUBKEY]                  \
                                                   Pubkey[$MINT_PUBKEY3]`
    assert_fail admin_add_entries_to_block_too_already_complete                                                       \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1053}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x41d"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x41d"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                     \
    `echo "encoding c                                                                                                 \
           fee_payer $ADMIN_PUBKEY                                                                                    \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $CONFIG_PUBKEY                                                                                     \
           account $ADMIN_PUBKEY s                                                                                    \
           account $ADMIN_PUBKEY ws                                                                                   \
           account $BLOCK_PUBKEY w                                                                                    \
           account $AUTHORITY_PUBKEY                                                                                  \
           account $SYSTEM_PROGRAM_PUBKEY                                                                             \
           account $SPL_TOKEN_PROGRAM_PUBKEY                                                                          \
           account $METAPLEX_PROGRAM_PUBKEY                                                                           \
           account $RENT_SYSVAR_PUBKEY                                                                                \
           account $ENTRY_PUBKEY3 w                                                                                   \
           account $MINT_PUBKEY3 w                                                                                    \
           account $TOKEN_PUBKEY3 w                                                                                   \
           account $METADATA_PUBKEY3 w                                                                                \
           // Instruction code 3 = AddEntriesToBlockData //                                                           \
           u8 3                                                                                                       \
           c_string 200 "http://foo.bar.com"                                                                          \
           pubkey $SYSTEM_PROGRAM_PUBKEY                                                                              \
           u16 3                                                                                                      \
           // But there are three entry SHA256 provided here //                                                       \
           sha256 \`sha256_of 3 again\`"                                                                              \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/admin.json                                                                             \
        | solxact submit l 2>&1`
fi
