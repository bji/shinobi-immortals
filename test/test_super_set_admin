
# Make sure that set_admin can only be done by the superuser
if should_run_test super_set_admin_wrong_super; then
    assert_fail super_set_admin_wrong_super                                                                           \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1100}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x44c"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x44c"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                     \
    `echo "encoding c                                                                                                 \
           fee_payer $RICH_USER1_PUBKEY                                                                               \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           // Wrong superuser //                                                                                      \
           account $RICH_USER1_PUBKEY s                                                                               \
           account $CONFIG_PUBKEY w                                                                                   \
           // Instruction code 1 = UpdateAdmin //                                                                     \
           u8 1                                                                                                       \
           // Admin pubkey //                                                                                         \
           pubkey $RICH_USER1_PUBKEY"                                                                                 \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/rich_user1.json                                                                        \
        | solxact submit l 2>&1`
fi


# Make sure that attempting to overwrite some other account doesn't succeed
if should_run_test super_set_admin_wrong_config; then
    assert_fail super_set_admin_wrong_config                                                                          \
    'ERROR: {"error":{"code":-32002,"data":{"accounts":null,"err":{"InstructionError":[0,{"Custom":1101}]},"logs":["Program REDACTED invoke [1]","Program REDACTED consumed REDACTED compute units","Program REDACTED failed: custom program error: 0x44d"],"returnData":null},"message":"Transaction simulation failed: Error processing Instruction 0: custom program error: 0x44d"},"id":1,"jsonrpc":"2.0"} Try solxact help for help'                                                     \
    `echo "encoding c                                                                                                 \
           fee_payer $SUPERUSER_PUBKEY                                                                                \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $SUPERUSER_PUBKEY s                                                                                \
           // Wrong config account //                                                                                 \
           account $SUPERUSER_PUBKEY w                                                                                \
           // Instruction code 1 = UpdateAdmin //                                                                     \
           u8 1                                                                                                       \
           // Admin pubkey //                                                                                         \
           pubkey $RICH_USER1_PUBKEY"                                                                                 \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/super.json                                                                             \
        | solxact submit l 2>&1`
fi


# Make sure that a successful set_admin works
if should_run_test super_set_admin_success; then
    assert super_set_admin_success_1                                                                                  \
    `echo "encoding c                                                                                                 \
           fee_payer $SUPERUSER_PUBKEY                                                                                \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $SUPERUSER_PUBKEY s                                                                                \
           account $CONFIG_PUBKEY w                                                                                   \
           // Instruction code 1 = UpdateAdmin //                                                                     \
           u8 1                                                                                                       \
           // Admin pubkey //                                                                                         \
           pubkey $RICH_USER1_PUBKEY"                                                                                 \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/super.json                                                                             \
        | solxact submit l 2>&1`
    # Check to make sure that the config account has the expected contents
    EXPECTED_CONFIG_ACCOUNT_DATA=`(echo 01000000 | xxd -r -p; pubkey_binary $RICH_USER1_PUBKEY) | base64`
    CONFIG_ACCOUNT_DATA=`get_account_data $CONFIG_PUBKEY`
    if [ "$EXPECTED_CONFIG_ACCOUNT_DATA" != "$CONFIG_ACCOUNT_DATA" ]; then
        echo "FAIL: super_set_admin_success (1): Incorrect account contents:"
        diff <(echo "$EXPECTED_CONFIG_ACCOUNT_DATA") <(echo "$CONFIG_ACCOUNT_DATA")
        exit 1
    fi
    # Now change it back
    assert super_set_admin_success_2                                                                                  \
    `echo "encoding c                                                                                                 \
           fee_payer $SUPERUSER_PUBKEY                                                                                \
           program $SELF_PROGRAM_PUBKEY                                                                               \
           account $SUPERUSER_PUBKEY s                                                                                \
           account $CONFIG_PUBKEY w                                                                                   \
           // Instruction code 1 = UpdateAdmin //                                                                     \
           u8 1                                                                                                       \
           // Admin pubkey //                                                                                         \
           pubkey $ADMIN_PUBKEY"                                                                                      \
        | solxact encode                                                                                              \
        | solxact hash l                                                                                              \
        | solxact sign $LEDGER/super.json                                                                             \
        | solxact submit l 2>&1`
    # Check to make sure that the config account has the expected contents
    EXPECTED_CONFIG_ACCOUNT_DATA=`(echo 01000000 | xxd -r -p; pubkey_binary $ADMIN_PUBKEY) | base64`
    CONFIG_ACCOUNT_DATA=`get_account_data $CONFIG_PUBKEY`
    if [ "$EXPECTED_CONFIG_ACCOUNT_DATA" != "$CONFIG_ACCOUNT_DATA" ]; then
        echo "FAIL: super_set_admin_success (2): Incorrect account contents:"
        diff <(echo "$EXPECTED_CONFIG_ACCOUNT_DATA") <(echo "$CONFIG_ACCOUNT_DATA")
        exit 1
    fi
fi
